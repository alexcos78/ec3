---
- hosts: localhost
  connection: local
  vars:
    VERSION: "{{ kubeflow_manifests_version | default('v1.6.1') }}"
    USER_MAIL: "{{ kubeflow_user | default('user@example.com') }}"
    USER_PASS: "{{ kubeflow_pass | default('$2y$12$4K/VkmDd1q1Orb3xAt82zu8gk7Ad6ReFR4LCP9UeYE90NLiN9Df72') }}"
  tasks:
  - name: Install Git
    package: name=git

  - name: Git clone kubeflow manifests repo
    git:
      repo: https://github.com/kubeflow/manifests
      dest: /tmp/kubeflow
      version: "{{ VERSION }}"
      update: no

  - name: Set kubeflow user
    lineinfile: 
      path: /tmp/kubeflow/common/dex/base/config-map.yaml
      regexp: '    - email: '
      line: '    - email: {{ USER_MAIL }}'

  - name: Set kubeflow pass
    lineinfile: 
      path: /tmp/kubeflow/common/dex/base/config-map.yaml
      regexp: '      hash: '
      line: '      hash: {{ USER_PASS }}'

  - name: Install kustomize 3.2.0
    get_url:
      url: https://github.com/kubernetes-sigs/kustomize/releases/download/v3.2.0/kustomize_3.2.0_linux_amd64
      dest: /opt/kustomize
      mode: '0777'

  - name: Build kubeflow yaml
    shell: /opt/kustomize build example > kubeflow.yaml
    args:
      chdir: /tmp/kubeflow
      creates: /tmp/kubeflow/kubeflow.yaml

  - name: Create kubeflow-user RoleBinding
    blockinfile:
      path: /tmp/kubeflow/kubeflow.yaml
      marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
      block: |
        ---
        apiVersion: v1
        kind: Namespace
        metadata:
          name: kubeflow-user
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: kubeflow-user-edit
          namespace: kubeflow-user
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: kubeflow-edit
        subjects:
        - apiGroup: rbac.authorization.k8s.io
          kind: User
          name: {{ USER_MAIL }}

  - name: Deploy kubeflow
    command: kubectl apply -f kubeflow.yaml
    args:
      chdir: /tmp/kubeflow
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf
    register: kresult
    until: "kresult is not failed"
    retries: 10
    delay: 10
