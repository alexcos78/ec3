---
- hosts: localhost
  connection: local
  vars: 
    VERSION: 3.2.3
  tasks:
  - name: Create the ARGO ns file spec
    copy:
      content: |
          apiVersion: v1
          kind: Namespace
          metadata:
            name: argo
      dest: /tmp/argo_ns.yml

  - name: Create ARGO ns
    command: kubectl apply -f /tmp/argo_ns.yml
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf

  - name: Deploy ARGO
    command: kubectl apply -n argo -f https://github.com/argoproj/argo-workflows/releases/download/v{{VERSION}}/install.yaml
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf

  - name: Create the ARGO ingress file spec
    copy:
      content: |
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: argo-server
          namespace: argo
          annotations:
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/backend-protocol: https
        spec:
          rules:
            - http:
                paths:
                  - backend:
                      service:
                        name: argo-server
                        port:
                          number: 2746
                    path: /
                    pathType: Prefix
      dest: /tmp/argo_ingress.yml

  - name: Deploy ARGO ingress
    command: kubectl apply -f /tmp/argo_ingress.yml
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf

  - name: Create default-admin rolebinding
    command: "kubectl create rolebinding default-admin --clusterrole=admin -n argo --serviceaccount=argo:default"
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf
    ignore_errors: yes

  - name: download argo-client
    get_url:
      url: https://github.com/argoproj/argo-workflows/releases/download/v{{VERSION}}/argo-linux-amd64.gz
      dest: /usr/local/bin/argo-linux-amd64.gz
    ignore_errors: yes

  - name: extract argo-client
    shell: gunzip /usr/local/bin/argo-linux-amd64.gz && mv /usr/local/bin/argo-linux-amd64 /usr/local/bin/argo && chmod +x /usr/local/bin/argo
    args:
      creates: /usr/local/bin/argo
    ignore_errors: yes
